package com.ncwc.shop.model.shopcart;

import android.annotation.TargetApi;
import android.app.Activity;
import android.content.Intent;
import android.graphics.Color;
import android.os.Build;
import android.os.Bundle;
import android.os.Handler;
import android.support.design.widget.Snackbar;
import android.support.v4.app.Fragment;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.support.v7.widget.Toolbar;
import android.text.Html;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.ncwc.shop.R;
import com.ncwc.shop.adapter.ShopCarAdapter;
import com.ncwc.shop.config.AsynHttpUtil;
import com.ncwc.shop.config.Constants;
import com.ncwc.shop.config.HttpService;
import com.ncwc.shop.interactor.IOAuthCallBack;
import com.ncwc.shop.interactor.PullCallback;
import com.ncwc.shop.model.perscenter.LoginActivity;
import com.ncwc.shop.util.SharepreUtil;
import com.ncwc.shop.widget.PullToLoadView;
import com.nostra13.universalimageloader.utils.L;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Created by admin on 2015/9/2.
 */
public class ShopCartFragment extends Fragment implements IOAuthCallBack {

	//控件
	private Toolbar common_toolbar;//标题栏
	private TextView shopcar_toolbar_edit;//标题右侧编辑
	private TextView toolbar_title;//标题
	private PullToLoadView pullToLoadView;//列表

	//下单栏
	private ImageView img_shopcar_allchoose;//全选
	private boolean ischoose = true;//是否全选
	private TextView tv_shopcar_commitpay;//下单
	private TextView tv_shopcar_sendmsg;//免费配送
	private TextView tv_shopcar_allpay;//合计
	private TextView tv_shopcar_addcollect;//移入收藏
	private TextView tv_shopcar_delete;//删除
	private boolean flag = true;//是否为编辑状态

	//设置整体变量
	private boolean isLoading = false;
	private boolean isHasLoadedAll = false;
	private ShopCarAdapter adapter;
	private RecyclerView mRecyclerView;

	//数据
	private int nextPage;
	AsynHttpUtil ahu = AsynHttpUtil.getInstance();
	private JSONArray store_list = null;


	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
		View view = inflater.inflate(R.layout.fragment_shopcart, container, false);
		common_toolbar = (Toolbar) view.findViewById(R.id.common_toolbar);
		shopcar_toolbar_edit = (TextView) view.findViewById(R.id.shopcar_toolbar_edit);
		toolbar_title = (TextView) view.findViewById(R.id.toolbar_title);
		pullToLoadView = (PullToLoadView) view.findViewById(R.id.pullToLoadView_shopcar);
		img_shopcar_allchoose = (ImageView) view.findViewById(R.id.img_shopcar_allchoose);
		tv_shopcar_commitpay = (TextView) view.findViewById(R.id.tv_shopcar_commitpay);

		tv_shopcar_sendmsg = (TextView) view.findViewById(R.id.tv_shopcar_sendmsg);
		tv_shopcar_allpay = (TextView) view.findViewById(R.id.tv_shopcar_allpay);
		tv_shopcar_addcollect = (TextView) view.findViewById(R.id.tv_shopcar_addcollect);
		tv_shopcar_delete = (TextView) view.findViewById(R.id.tv_shopcar_delete);

		mRecyclerView = pullToLoadView.getRecyclerView();
		mRecyclerView.setHasFixedSize(true);
		LinearLayoutManager manager = new LinearLayoutManager(mRecyclerView.getContext());
		manager.setOrientation(LinearLayoutManager.VERTICAL);
		mRecyclerView.setLayoutManager(manager);
		pullToLoadView.isLoadMoreEnabled(false);

		initData();
		return view;
	}

	@Override
	public void setUserVisibleHint(boolean isVisibleToUser) {
		super.setUserVisibleHint(isVisibleToUser);
		if (isVisibleToUser) {
			takeIntel();
		}
	}

	@TargetApi(Build.VERSION_CODES.LOLLIPOP)
	public void initData() {

		//发出网络请求
		takeIntel();

		/**
		 * 标题
		 */
		toolbar_title.setText(R.string.shopcar);
		toolbar_title.setTextColor(Color.WHITE);

		/**
		 * 编辑
		 */
		shopcar_toolbar_edit.setVisibility(View.VISIBLE);
		shopcar_toolbar_edit.setText(R.string.edit);
		shopcar_toolbar_edit.setTextColor(Color.WHITE);
		shopcar_toolbar_edit.setTextSize(18);

		/**
		 * 移入收藏、删除购物车_item
		 */
		View.OnClickListener onClickListener = new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				switch (v.getId()) {
					case R.id.tv_shopcar_addcollect:
						adapter.AddtoShoucang();
						break;
					case R.id.tv_shopcar_delete:
						adapter.DeleteShopcarItem();
						break;
				}
			}
		};
		tv_shopcar_addcollect.setOnClickListener(onClickListener);
		tv_shopcar_delete.setOnClickListener(onClickListener);

	}

	private void loadData(final int page) {
		isLoading = true;
		new Handler().postDelayed(new Runnable() {
			public void run() {
				if (isHasLoadedAll) {
					Toast.makeText(getActivity(), "没有更多数据了", Toast.LENGTH_SHORT).show();
				}
				/*if (page > 10) {
					isHasLoadedAll = true;
					return;
				}*/
				if (page == 1) {
					adapter = new ShopCarAdapter(ShopCartFragment.this, store_list);
					mRecyclerView.setAdapter(adapter);
					//编辑
					shopcar_toolbar_edit.setOnClickListener(new View.OnClickListener() {
						@Override
						public void onClick(View v) {
							if (flag) {
								shopcar_toolbar_edit.setText(R.string.finish);
								tv_shopcar_sendmsg.setVisibility(View.GONE);
								tv_shopcar_allpay.setVisibility(View.GONE);
								tv_shopcar_commitpay.setVisibility(View.GONE);
								tv_shopcar_addcollect.setVisibility(View.VISIBLE);
								tv_shopcar_delete.setVisibility(View.VISIBLE);
							} else {
								shopcar_toolbar_edit.setText(R.string.edit);
								tv_shopcar_sendmsg.setVisibility(View.VISIBLE);
								tv_shopcar_allpay.setVisibility(View.VISIBLE);
								tv_shopcar_commitpay.setVisibility(View.VISIBLE);
								tv_shopcar_addcollect.setVisibility(View.GONE);
								tv_shopcar_delete.setVisibility(View.GONE);
							}
							flag = !flag;
						}
					});
					/**
					 * 全选
					 */
					img_shopcar_allchoose.setOnClickListener(new View.OnClickListener() {
						@Override
						public void onClick(View v) {
							if (ischoose) {
								img_shopcar_allchoose.setImageResource(R.mipmap.quan);
								adapter = new ShopCarAdapter(ShopCartFragment.this, store_list, true);
							} else {
								img_shopcar_allchoose.setImageResource(R.mipmap.qx_w);
								adapter = new ShopCarAdapter(ShopCartFragment.this, store_list, false);
								tv_shopcar_commitpay.setText("下单");
							}
							mRecyclerView.setAdapter(adapter);
							if (ischoose == false) {
								adapter.AllSelect();
							}
							ischoose = !ischoose;
						}
					});
					/**
					 * 下单
					 */
					tv_shopcar_commitpay.setOnClickListener(new View.OnClickListener() {
						@Override
						public void onClick(View v) {
							if (tv_shopcar_commitpay.getText().equals("下单")) {
								showMsg("请选择商品");
							} else {
								adapter.CreateOrder();
							}
						}
					});//下单====>创建订单
				} else {
					try {
						adapter.addData(store_list);
					} catch (JSONException e) {
					}
				}

				pullToLoadView.setComplete();
				isLoading = false;
				nextPage = page + 1;
			}
		}, 1000);
	}

	@Override
	public void getIOAuthCallBack(JSONObject response, String type) throws JSONException {
		if (type.equals(HttpService.TYPE_SHOPCAR)) {
//			Log.d("=====================", response.toString());
			if (response.getString("code").equals("200")) {
				JSONObject all = response.getJSONObject("datas");
				store_list = all.getJSONArray("list");

//				mRecyclerView = pullToLoadView.getRecyclerView();
				pullToLoadView.setPullCallback(new PullCallback() {
					public void onLoadMore() {
//						loadData(nextPage);
					}

					public void onRefresh() {
						isHasLoadedAll = false;
						loadData(1);
					}

					public boolean isLoading() {
						Log.e("main activity", "main isLoading:" + isLoading);
						return isLoading;
					}

					public boolean hasLoadedAllItems() {
						return isHasLoadedAll;
					}
				});
				pullToLoadView.initLoad();
			}
		} else if (type.equals(HttpService.TYPE_SHOPCAR_DELETE)) {
//			Log.d("--------------------------", response.toString());
			if (response.getString("code").equals("200")) {
				showMsg(response.getString("msg"));
			}
			takeIntel();
		} else if (type.equals(HttpService.TYPE_SHOPCAR_ADDTO_SHOUCANG)) {
//			Log.d("--------------------------", response.toString());
			if (response.getString("code").equals("200")) {
				showMsg(response.getString("msg"));
			}
			takeIntel();
		}

	}

	//发出网络请求
	private void takeIntel() {
		if (SharepreUtil.getStringValue(getActivity(), Constants.MEMBERID, "").equals("")) {
			showMsg(getString(R.string.none_login));
		} else {
			ahu.setIoAuthCallBack(this);
			ahu.shopcar(getActivity());
		}
	}

	private void showMsg(String string) {
		Snackbar.make(getActivity().getWindow().getDecorView(), string, Snackbar.LENGTH_SHORT).show();
	}

	/**
	 * 设置下单商品种类数量
	 *
	 * @param num adapter中选中数量
	 */
	public void setChooseNum(int num) {
		if (num == 0) {
			tv_shopcar_commitpay.setText("下单");
		} else {
			tv_shopcar_commitpay.setText("下单(" + num + ")");
		}
	}

	/**
	 * 设置合计金钱大小
	 */
	public void setMoney(float num) {
		if (num < 0) {
			num = 0;
		}
		String num_ = String.format("%.2f", num);
		tv_shopcar_allpay.setText(Html.fromHtml("合计：<font color='#FF0000'><small>￥</small>" + num_ + "</font>"));
	}

	/**
	 * 移入收藏和删除具体操作
	 */
	public void doEdit(int style, String id_s) {
		switch (style) {
			case 0://移入收藏
				ahu.shopcar_addtooshoucang(getActivity(), id_s);
				break;
			case 1://删除
				ahu.shopcar_delete(getActivity(), id_s);
				break;
		}
	}

	/**
	 * 创建订单
	 */
	public void onCreateOrder(String money, List<List<String>> alldatas) {
//		showMsg(store_name.size() + "====" + alldatas.size());
		Intent intent = new Intent(getActivity(), ShopcarSendOrder.class);
		Bundle bundle = new Bundle();
		bundle.putString("money", money);
		bundle.putSerializable("all", (Serializable) alldatas);
		intent.putExtras(bundle);
		startActivity(intent);
	}

	@Override
	public void onResume() {
		super.onResume();
		takeIntel();
	}

	/*public void widgetClick(View v) {
	}*/
}
