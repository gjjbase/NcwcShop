package com.ncwc.shop.model.perscenter;

import android.app.ActionBar;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.graphics.drawable.Drawable;
import android.os.Environment;
import android.view.Gravity;
import android.view.View;
import android.view.ViewTreeObserver;
import android.widget.ImageView;
import android.widget.TextView;

import com.ncwc.shop.R;
import com.ncwc.shop.base.BaseFragment;
import com.ncwc.shop.config.AsynHttpUtil;
import com.ncwc.shop.config.Constants;
import com.ncwc.shop.interactor.IOAuthCallBack;
import com.ncwc.shop.interactor.SelectReturn;
import com.ncwc.shop.util.AsyncLoadingPicture;
import com.ncwc.shop.util.CameraManager;
import com.ncwc.shop.util.ImageTools;
import com.ncwc.shop.util.ScreenUtils;
import com.ncwc.shop.util.SharepreUtil;
import com.ncwc.shop.widget.DialogSelect;
import com.nostra13.universalimageloader.core.ImageLoader;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.File;

import butterknife.Bind;
import butterknife.OnClick;

/**
 * Created by DELL-PC on 2015/10/5.
 */
public class PersonalFragment extends BaseFragment implements IOAuthCallBack {

	@Bind(R.id.toolbar_title)
	TextView toolbar_title;
	@Bind(R.id.img_personal_ic)
	ImageView img_personal_ic;//头像
	@Bind(R.id.img_personal_bg)
	ImageView img_personal_bg;//头像背景
	@Bind(R.id.shopcar_toolbar_edit)
	TextView shopcar_toolbar_edit;//设置按钮
	@Bind(R.id.tv_personal_vantages)
	TextView tv_personal_vantages;//我的积分
	@Bind(R.id.tv_personal_numoftryuse)
	TextView tv_personal_numoftryuse;//试用记录

	private Bitmap icon;//返回的头像
	private AsynHttpUtil ahu;

	@Override
	public void initData() {
		toolbar_title.setText(R.string.my);
		shopcar_toolbar_edit.setVisibility(View.VISIBLE);
		shopcar_toolbar_edit.setWidth(90);
		shopcar_toolbar_edit.setHeight(90);
		shopcar_toolbar_edit.setBackgroundResource(R.mipmap.my_setting);
		if (SharepreUtil.getStringValue(getActivity(), Constants.MEMBERID, "").equals("")) {//判断是否登录
			icon = BitmapFactory.decodeResource(getResources(), R.mipmap.ic_launcher);
			img_personal_ic.setImageBitmap(icon);
		} else {
			//登录成功
			AsyncLoadingPicture.getInstance(context).LoadPicture(SharepreUtil.getStringValue(getActivity(), Constants.MEMBERAVATAR, ""), img_personal_ic);
			Bitmap bitmap = ImageLoader.getInstance().loadImageSync(SharepreUtil.getStringValue(getActivity(), Constants.MEMBERAVATAR, ""));
			if (bitmap != null) {
				img_personal_bg.setBackground(new BitmapDrawable(getResources(), bitmap));
			} else {
				img_personal_bg.setBackground(getResources().getDrawable(R.color.bg_color));
			}
		}
		applyBlur();
	}

	@OnClick({R.id.shopcar_toolbar_edit, R.id.tv_personal_vantages, R.id.tv_personal_numoftryuse,
			R.id.rl_my_liulan, R.id.rl_my_shoucang, R.id.rl_my_place, R.id.rl_my_fankui, R.id.rl_my_yaoqing,
			R.id.rl_my_aboutus, R.id.rl_my_jieshao, R.id.img_personal_ic, R.id.rl_my_order, R.id.tv_personal_shoppingsale})
	public void widgetClick(View v) {
		switch (v.getId()) {
			case R.id.shopcar_toolbar_edit://设置页面
				if (SharepreUtil.getStringValue(getActivity(), Constants.MEMBERID, "").equals("")) {
					startActivity(new Intent(getActivity(), LoginActivity.class));
					getActivity().finish();
				} else {
					Intent intent = new Intent(new Intent(getActivity(), SettingActivity.class));
					//没有接口前暂时使用
					intent.putExtra("icon", SharepreUtil.getStringValue(getActivity(), Constants.MEMBERAVATAR, ""));
					startActivityForResult(intent, Constants.INTENT_ACTION_ICON);
//					startActivity(intent);
				}
				break;
			case R.id.tv_personal_vantages://我的积分页面
				startActivity(new Intent(getActivity(), MyVantagesActivity.class));
				break;
			case R.id.tv_personal_shoppingsale://优惠券页面
				startActivity(new Intent(getActivity(), ShoppingSaleActivity.class));
				break;
			case R.id.tv_personal_numoftryuse://试用记录界面
				startActivity(new Intent(getActivity(), ShiYongJiLvActivity.class));
				break;
			case R.id.rl_my_liulan://我的浏览
				Intent in_liulan = new Intent(getActivity(), LiulanAndShoucangActivity.class);
				in_liulan.putExtra("style", 0);
				startActivity(in_liulan);
				break;
			case R.id.rl_my_shoucang://我的收藏
				Intent in_shoucang = new Intent(getActivity(), LiulanAndShoucangActivity.class);
				in_shoucang.putExtra("style", 1);
				startActivity(in_shoucang);
				break;
			case R.id.rl_my_place://我的地址
				startActivity(new Intent(getActivity(), MyPlaceManageActivity.class));
				break;
			case R.id.rl_my_fankui://我的反馈
				startActivity(new Intent(getActivity(), MyFankuiActivity.class));
				break;
			case R.id.rl_my_yaoqing://我的邀请
				startActivity(new Intent(getActivity(), MyYaoqingActivity.class));
				break;
			case R.id.rl_my_aboutus://关于我们
				startActivity(new Intent(getActivity(), AboutUsActivity.class));
//				startActivity(new Intent(getActivity(), LoginActivity.class));
				break;
			case R.id.rl_my_jieshao://活动介绍
				startActivity(new Intent(getActivity(), HuodongJieshaoActivity.class));
				break;
			case R.id.img_personal_ic://头像
				//无
				break;
			case R.id.rl_my_order://我的订单
				startActivity(new Intent(getActivity(), MyOrderActivity.class));
				break;
		}
	}

	@Override
	protected int getContentViewLayoutID() {
		return R.layout.fragment_personal;
	}

	/*高斯模糊*/
	private void applyBlur() {
		img_personal_bg.getViewTreeObserver().addOnPreDrawListener(
				new ViewTreeObserver.OnPreDrawListener() {
					@Override
					public boolean onPreDraw() {
						img_personal_bg.getViewTreeObserver()
								.removeOnPreDrawListener(this);
						img_personal_bg.buildDrawingCache();
						Bitmap bmp = img_personal_bg.getDrawingCache();
						ImageTools.blur(getActivity(), bmp, img_personal_bg);
						return true;
					}
				});
	}

	//有接口后使用onResume重新请求头像用户名
	@Override
	public void onActivityResult(int requestCode, int resultCode, Intent data) {
		if (requestCode == Constants.INTENT_ACTION_ICON) {
			if (data != null) {
				icon = (Bitmap) data.getParcelableExtra("icon");
				img_personal_ic.setImageBitmap(icon);
				img_personal_bg.setBackground(new BitmapDrawable(icon));
				applyBlur();
			}
		}
	}

	@Override
	public void getIOAuthCallBack(JSONObject response, String type) throws JSONException {

	}
}
