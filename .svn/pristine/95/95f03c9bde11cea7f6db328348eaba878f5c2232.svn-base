package com.ncwc.shop.model.classifica;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.view.View;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.TextView;

import com.ncwc.shop.R;
import com.ncwc.shop.base.BaseActivity;
import com.ncwc.shop.base.FragmentTabAdapter;
import com.ncwc.shop.base.ImageViewPagerAdapter;
import com.ncwc.shop.interactor.impl.SwipeBackHelper;
import com.ncwc.shop.model.common.PackSaleFragment;
import com.ncwc.shop.model.common.ProductIntrFragment;
import com.ncwc.shop.model.common.SpecificParFragment;
import com.ncwc.shop.util.DimenUtils;
import com.ncwc.shop.widget.RotateDownPageTransformer;
import com.ncwc.shop.widget.TitleScrollView;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import butterknife.Bind;

/**
 * 免费试用产品详情
 * Created by admin on 2015/10/7.
 */
public class FreeComDetailActivity extends BaseActivity implements ViewPager.OnPageChangeListener, RadioGroup.OnCheckedChangeListener, ViewTreeObserver.OnGlobalLayoutListener {
    @Bind(R.id.viewpager)
    ViewPager viewpager;
    @Bind(R.id.lindot)
    LinearLayout lindot;
    @Bind(R.id.parent_layout)
    LinearLayout parent_layout;
    @Bind(R.id.gad_milb)
    LinearLayout gad_milb;
    @Bind(R.id.gad_botm)
    LinearLayout gad_botm;
    @Bind(R.id.scrollView)
    TitleScrollView scrollView;
    @Bind(R.id.tabs_rg)
    RadioGroup tabs_rg;
    @Bind(R.id.tabs_rg2)
    RadioGroup tabs_rg2;
    @Bind(R.id.toolbar_title)
    TextView toolbar_title;
    private List<ImageView> mImageViews = new ArrayList<ImageView>();
    private ImageViewPagerAdapter adapter;
    boolean isScirolled = false;
    private int[] pics = {R.mipmap.moren, R.mipmap.moren, R.mipmap.moren};
    private List<Fragment> listfragment = new ArrayList<Fragment>(Arrays.asList(new ProductIntrFragment(), new SpecificParFragment(), new PackSaleFragment()));
    private FragmentTabAdapter tabAdapter;

    protected View getLoadingTargetView() {
        return null;
    }

    @Override
    public void widgetClick(View v) {

    }

    @Override
    protected int getContentViewLayoutID() {
        supportRequestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
        SwipeBackHelper.onCreate(this);
        SwipeBackHelper.getCurrentPage(this).setSwipeBackEnable(true).setSwipeEdgePercent(0.5f).setSwipeSensitivity(0.5f).setClosePercent(0.5f).setSwipeRelateEnable(true).setSwipeSensitivity(1);
        return R.layout.activity_freecomdet;
    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        SwipeBackHelper.onPostCreate(this);
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        SwipeBackHelper.onDestroy(this);
    }

    @Override
    protected void initData() {
        toolbar_title.setText(R.string.comdetal);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        tabAdapter = new FragmentTabAdapter(this, listfragment, R.id.tab_content, tabs_rg);
        for (int imgId : pics) {
            ImageView imageView = new ImageView(getApplicationContext());
            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
            imageView.setImageResource(imgId);
            mImageViews.add(imageView);
            ImageView imageView1 = new ImageView(getApplicationContext());
            setimageAtt(imageView1);
            imageView1.setImageResource(R.mipmap.lunbo);
            lindot.addView(imageView1);
        }
        ((ImageView) lindot.getChildAt(0)).setImageResource(R.mipmap.lunbodangqian);
        adapter = new ImageViewPagerAdapter(mImageViews);
        viewpager.setPageTransformer(true, new RotateDownPageTransformer());
        viewpager.setAdapter(adapter);
        viewpager.addOnPageChangeListener(this);
        parent_layout.getViewTreeObserver().addOnGlobalLayoutListener(this);
        tabs_rg2.setOnCheckedChangeListener(this);
    }

    private void setimageAtt(ImageView imageView) {
        imageView.setPadding(DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10));
        imageView.setMinimumHeight(DimenUtils.dip2px(getApplicationContext(), 30));
        imageView.setMinimumWidth(DimenUtils.dip2px(getApplicationContext(), 30));
        imageView.setScaleType(ImageView.ScaleType.CENTER);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

    }

    @Override
    public void onPageSelected(int position) {
        for (int i = 0; i < pics.length; i++)
            ((ImageView) lindot.getChildAt(i)).setImageResource(R.mipmap.lunbo);
        ((ImageView) lindot.getChildAt(position)).setImageResource(R.mipmap.lunbodangqian);
    }

    @Override
    public void onPageScrollStateChanged(int state) {
        switch (state) {
            case 1:
                isScirolled = false;
                break;
            case 2:
                isScirolled = true;
                break;
            case 0:
                if (viewpager.getCurrentItem() == viewpager.getAdapter().getCount() - 1 && !isScirolled)
                    viewpager.setCurrentItem(0);
                else if (viewpager.getCurrentItem() == 0 && !isScirolled)
                    viewpager.setCurrentItem(viewpager.getAdapter().getCount() - 1);
                break;
        }
    }

    @Override
    public void onCheckedChanged(RadioGroup group, int checkedId) {
        switch (group.getId()) {
            case R.id.tabs_rg2:
                for (int i = 0; i < tabs_rg2.getChildCount(); i++) {
                    if (tabs_rg2.getChildAt(i).getId() == checkedId) tabAdapter.showTab(i);
                    break;
                }
        }
    }

    public void onGlobalLayout() {
        onScroll(scrollView.getScrollY());
    }

    public void onScroll(int scrollY) {
        int layoumilb = Math.max(scrollY, gad_milb.getTop());
        gad_botm.layout(0, layoumilb, gad_botm.getWidth(), layoumilb + gad_botm.getHeight());
    }
}
