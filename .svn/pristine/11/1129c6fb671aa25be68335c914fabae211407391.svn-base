package com.ncwc.shop.model.classifica;

import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentTabHost;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.Window;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TabHost;
import android.widget.TextView;

import com.ncwc.shop.R;
import com.ncwc.shop.base.BaseActivity;
import com.ncwc.shop.base.ImageViewPagerAdapter;
import com.ncwc.shop.interactor.impl.SwipeBackHelper;
import com.ncwc.shop.util.DimenUtils;
import com.ncwc.shop.widget.RotateDownPageTransformer;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import butterknife.Bind;

/**
 * 活动评价页面
 * Created by admin on 2015/10/9.
 */
public class FreeVaActivity extends BaseActivity implements ViewPager.OnPageChangeListener {

    @Bind(R.id.viewpager)
    ViewPager viewpager;
    @Bind(R.id.lindot)
    LinearLayout lindot;
    @Bind(android.R.id.tabhost)
    FragmentTabHost mTabHost;
    private List<ImageView> mImageViews = new ArrayList<ImageView>();
    private ImageViewPagerAdapter adapter;
    boolean isScirolled = false;
    private int[] pics = {R.mipmap.moren, R.mipmap.moren, R.mipmap.moren};
    private List<Fragment> listfragment = new ArrayList<Fragment>(Arrays.asList(new FreeComDetailFragment(), new FreeComdSpeFragment()));

    protected View getLoadingTargetView() {
        return null;
    }

    @Override
    public void widgetClick(View v) {

    }

    @Override
    protected int getContentViewLayoutID() {
        supportRequestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
        SwipeBackHelper.onCreate(this);

        SwipeBackHelper.getCurrentPage(this)
                .setSwipeBackEnable(true)
                .setSwipeEdgePercent(0.5f)
                .setSwipeSensitivity(0.5f)
                .setClosePercent(0.5f)
                .setSwipeRelateEnable(true).setSwipeSensitivity(1);
        return R.layout.activity_freeav;
    }
    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        SwipeBackHelper.onPostCreate(this);
    }
    @Override
    protected void onDestroy() {
        super.onDestroy();
        SwipeBackHelper.onDestroy(this);
    }
    @Override
    protected void initData() {
        TextView txt = (TextView) mToolbar.findViewById(R.id.toolbar_title);
        txt.setText(R.string.freeeva);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        for (int imgId : pics) {
            ImageView imageView = new ImageView(getApplicationContext());
            imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
            imageView.setImageResource(imgId);
            mImageViews.add(imageView);
            ImageView imageView1 = new ImageView(getApplicationContext());
            imageView1.setImageResource(R.mipmap.lunbo);
            setimageAtt(imageView1);
            lindot.addView(imageView1);
        }
        mTabHost.setup(this, getSupportFragmentManager(), R.id.viewpager_botm);
        mTabHost.getTabWidget().setDividerDrawable(null);
        int count = listfragment.size();
        for (int i = 0; i < count; i++) {
            TabHost.TabSpec tabSpec = mTabHost.newTabSpec(getResources().getStringArray(R.array.menuspac)[i]).setIndicator(getTabItemView(i));
            mTabHost.addTab(tabSpec, listfragment.get(i).getClass(), null);
        }
        viewpager.setPageTransformer(true, new RotateDownPageTransformer());
        adapter = new ImageViewPagerAdapter(mImageViews);
        viewpager.setAdapter(adapter);
        ((ImageView) lindot.getChildAt(0)).setImageResource(R.mipmap.lunbodangqian);
        viewpager.addOnPageChangeListener(this);
    }

    private View getTabItemView(int index) {
        LayoutInflater layoutInflater = LayoutInflater.from(this);
        View view = layoutInflater.inflate(R.layout.tab_item, null);
//        ImageView imageView = (ImageView) view.findViewById(R.id.iv_icon);
//        imageView.setImageResource(icon[index]);
        TextView textView = (TextView) view.findViewById(R.id.text_ico);
        textView.setText(getResources().getStringArray(R.array.menuspac)[index]);
        return view;
    }

    private void setimageAtt(ImageView imageView) {
        imageView.setPadding(DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10));
        imageView.setMinimumHeight(DimenUtils.dip2px(getApplicationContext(), 30));
        imageView.setMinimumWidth(DimenUtils.dip2px(getApplicationContext(), 30));
        imageView.setScaleType(ImageView.ScaleType.CENTER);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

    }

    @Override
    public void onPageSelected(int position) {
        for (int i = 0; i < pics.length; i++)
            ((ImageView) lindot.getChildAt(i)).setImageResource(R.mipmap.lunbo);
        ((ImageView) lindot.getChildAt(position)).setImageResource(R.mipmap.lunbodangqian);
    }

    @Override
    public void onPageScrollStateChanged(int state) {
        switch (state) {
            case 1:
                isScirolled = false;
                break;
            case 2:
                isScirolled = true;
                break;
            case 0:
                if (viewpager.getCurrentItem() == viewpager.getAdapter().getCount() - 1 && !isScirolled) {
                    viewpager.setCurrentItem(0);
                } else if (viewpager.getCurrentItem() == 0 && !isScirolled) {
                    viewpager.setCurrentItem(viewpager.getAdapter().getCount() - 1);
                }
                break;
        }
    }
}
