package com.ncwc.shop.model.homepage;

import android.content.Intent;
import android.os.Bundle;
import android.support.design.widget.Snackbar;
import android.support.v4.app.Fragment;
import android.support.v4.view.ViewPager;
import android.view.KeyEvent;
import android.view.View;
import android.view.ViewTreeObserver;
import android.view.Window;
import android.view.animation.Animation;
import android.view.animation.TranslateAnimation;
import android.widget.EditText;
import android.widget.GridView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RadioGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.ncwc.shop.R;
import com.ncwc.shop.adapter.DetailCartAdapter;
import com.ncwc.shop.adapter.SelectDialogAdapter;
import com.ncwc.shop.base.BaseActivity;
import com.ncwc.shop.base.FragmentTabAdapter;
import com.ncwc.shop.base.ImageViewPagerAdapter;
import com.ncwc.shop.config.AsynHttpUtil;
import com.ncwc.shop.config.Constants;
import com.ncwc.shop.config.HttpService;
import com.ncwc.shop.interactor.IOAuthCallBack;
import com.ncwc.shop.interactor.OnScrollListener;
import com.ncwc.shop.interactor.impl.SwipeBackHelper;
import com.ncwc.shop.model.common.PackSaleFragment;
import com.ncwc.shop.model.common.ProductIntrFragment;
import com.ncwc.shop.model.common.SpecificParFragment;
import com.ncwc.shop.model.shopcart.ShopcarSendOrder;
import com.ncwc.shop.util.AsyncLoadingPicture;
import com.ncwc.shop.util.DimenUtils;
import com.ncwc.shop.util.SharepreUtil;
import com.ncwc.shop.widget.AllListView;
import com.ncwc.shop.widget.CircularImage;
import com.ncwc.shop.widget.RotateDownPageTransformer;
import com.ncwc.shop.widget.TitleScrollView;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import butterknife.Bind;
import butterknife.OnClick;

/**
 * 所有商品倆面的產品詳情
 * Created by admin on 2015/10/6.
 */
public class DetailsCartActivity extends BaseActivity implements ViewPager.OnPageChangeListener, IOAuthCallBack, OnScrollListener, RadioGroup.OnCheckedChangeListener, ViewTreeObserver.OnGlobalLayoutListener, SelectDialogAdapter.SelectDialogListener {
    @Bind(R.id.grd_botm)
    GridView grd_botm;
    @Bind(R.id.viewpager)
    ViewPager viewpager;
    @Bind(R.id.lindot)
    LinearLayout lindot;
    @Bind(R.id.toolbar_title)
    TextView toolbar_title;
    @Bind(R.id.good_name)
    TextView good_name;
    @Bind(R.id.goods_price)
    TextView goods_price;
    @Bind(R.id.oods_marketprice)
    TextView oods_marketprice;
    @Bind(R.id.goods_price2)
    TextView goods_price2;
    @Bind(R.id.oods_marketprice2)
    TextView oods_marketprice2;
    @Bind(R.id.geval_addtime)
    TextView geval_addtime;
    @Bind(R.id.evaluate)
    TextView evaluate;
    @Bind(R.id.member_name)
    TextView member_name;
    @Bind(R.id.tabs_rg)
    RadioGroup tabs_rg;
    @Bind(R.id.tabs_rg2)
    RadioGroup tabs_rg2;
    @Bind(R.id.scrollView)
    TitleScrollView scrollView;
    @Bind(R.id.gad_milb)
    LinearLayout gad_milb;
    @Bind(R.id.gad_botm)
    LinearLayout gad_botm;
    @Bind(R.id.parent_layout)
    LinearLayout parent_layout;
    @Bind(R.id.member_avatar)
    CircularImage member_avatar;
    @Bind(R.id.img_title)
    ImageView img_title;
    @Bind(R.id.bottom)
    RelativeLayout bottom;
    @Bind(R.id.listview)
    AllListView listview;
    @Bind(R.id.edt_input)
    EditText edt_input;
    @Bind(R.id.txt_coll)
    TextView txt_coll;
    @Bind(R.id.lin_msg)
    LinearLayout lin_msg;
    boolean isScirolled = false;
    private SelectDialogAdapter selectDialogAdapter;
    private ImageViewPagerAdapter adapter;
    private DetailCartAdapter gridadapter;
    private FragmentTabAdapter tabAdapter;
    private ProductIntrFragment productIntrFragment;
    private SpecificParFragment specificParFragment;
    private PackSaleFragment packSaleFragment;
    private List<Fragment> listfragment;
    private AsynHttpUtil asynHttpUtil;
    private AsyncLoadingPicture asyncLoadingPicture;
    private String goods_id;
    private String goods_spec;
    private String goods_pricestr;
    private String store_name;
    private String goods_image;
    private int num = 1;
    private JSONArray jsonArray;



    @Override
    protected void onDestroy() {
        super.onDestroy();
        SwipeBackHelper.onDestroy(this);
    }

    protected View getLoadingTargetView() {
        return null;
    }

    @OnClick({R.id.txt_type, R.id.txt_favoriters, R.id.btn, R.id.img_add, R.id.img_subt, R.id.txt_addcart, R.id.nowcart})
    public void widgetClick(View v) {
        num = edt_input.getText().toString().trim().toString().equals("") ? 0 : Integer.parseInt(edt_input.getText().toString().trim());
        switch (v.getId()) {
            case R.id.img_subt:
                num = num <= 0 ? 0 : num - 1;
                edt_input.setText(num + "");
                break;
            case R.id.img_add:
                num++;
                edt_input.setText(num + "");
                break;
            case R.id.txt_type:
                //分类选择框
                if (bottom.getVisibility() == View.VISIBLE) {
                    hideListAnimation();
                } else {
                    bottom.setVisibility(View.VISIBLE);
                    showListAnimation();
                }
                break;
            case R.id.txt_favoriters://收藏
                if (SharepreUtil.getStringValue(getApplicationContext(), Constants.TOKEN, "").equals("")) {
                    Snackbar.make(getWindow().getDecorView(), R.string.nologin, Snackbar.LENGTH_LONG).setAction(R.string.sure, new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            Intent intent = new Intent("com.ncwc.shop.interactor.receiver.GoLoginRegister");
                            sendBroadcast(intent);
                        }
                    }).show();
                    return;
                }
                asynHttpUtil.favorites(DetailsCartActivity.this, goods_id);
                asynHttpUtil.setIoAuthCallBack(this);
                break;
            case R.id.btn:
                Bundle bundle = new Bundle();
                bundle.putString("goods_id", goods_id);
                readyGo(EvaluateActivity.class, bundle);
                break;
            case R.id.txt_addcart://加入购物车
                if (SharepreUtil.getStringValue(getApplicationContext(), Constants.TOKEN, "").equals("")) {
                    Snackbar.make(getWindow().getDecorView(), R.string.nologin, Snackbar.LENGTH_LONG).setAction(R.string.sure, new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            Intent intent = new Intent("com.ncwc.shop.interactor.receiver.GoLoginRegister");
                            sendBroadcast(intent);
                        }
                    }).show();
                    return;
                }
                asynHttpUtil.addchopcart(DetailsCartActivity.this, goods_id, edt_input.getText().toString().equals("") ? 1 : Integer.parseInt(edt_input.getText().toString().trim()));
                asynHttpUtil.setIoAuthCallBack(this);
                break;
            case R.id.nowcart://立即购买
                if (SharepreUtil.getStringValue(getApplicationContext(), Constants.TOKEN, "").equals("")) {
                    Snackbar.make(getWindow().getDecorView(), R.string.nologin, Snackbar.LENGTH_LONG).setAction(R.string.sure, new View.OnClickListener() {
                        @Override
                        public void onClick(View v) {
                            Intent intent = new Intent("com.ncwc.shop.interactor.receiver.GoLoginRegister");
                            sendBroadcast(intent);
                        }
                    }).show();
                    return;
                } else {
                    JSONArray jsonArray = new JSONArray();
                    JSONObject jsonObject = new JSONObject();
                    try {
                        //goods：商品信息（json传递）参照格式：[{"id":"101014","num":"1","price":"60.0"},{"id":"100966","num":"1","price":"50.0"}]
                        jsonObject.put("id", goods_id);
                        jsonObject.put("num", num + "");
                        jsonObject.put("price", goods_pricestr);
                        jsonArray.put(jsonObject);
                    } catch (JSONException e) {

                    }
                    asynHttpUtil.countMoney(DetailsCartActivity.this, jsonArray.toString(), "", "", false);
                    asynHttpUtil.setIoAuthCallBack(this);
                }
                break;
        }
    }

    public void hideListAnimation() {
        TranslateAnimation translateAnimation = new TranslateAnimation(1, 0f, 1, 0f, 1, 0f, 1, 1f);
        translateAnimation.setDuration(200);
        bottom.startAnimation(translateAnimation);
        translateAnimation.setAnimationListener(new Animation.AnimationListener() {
            @Override
            public void onAnimationStart(Animation animation) {

            }

            @Override
            public void onAnimationEnd(Animation animation) {
                bottom.setVisibility(View.GONE);
            }

            @Override
            public void onAnimationRepeat(Animation animation) {
            }
        });
    }

    public void showListAnimation() {
        TranslateAnimation translateAnimation = new TranslateAnimation(1, 0f, 1, 0f, 1, 1f, 1, 0f);
        translateAnimation.setDuration(200);
        bottom.startAnimation(translateAnimation);
    }

    @Override
    protected int getContentViewLayoutID() {
        supportRequestWindowFeature(Window.FEATURE_ACTION_BAR_OVERLAY);
        SwipeBackHelper.onCreate(this);
        SwipeBackHelper.getCurrentPage(this).setSwipeBackEnable(true).setSwipeEdgePercent(0.5f).setSwipeSensitivity(0.5f).setClosePercent(0.5f).setSwipeRelateEnable(true).setSwipeSensitivity(0);
        return R.layout.activity_detailscart;
    }

    @Override
    protected void onPostCreate(Bundle savedInstanceState) {
        super.onPostCreate(savedInstanceState);
        SwipeBackHelper.onPostCreate(this);
    }

    @Override
    protected void initData() {
        toolbar_title.setText(R.string.comdetal);
        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
        goods_id = getIntent().getStringExtra("goods_id");
        goods_spec = getIntent().getStringExtra("goods_spec");
        asynHttpUtil = AsynHttpUtil.getInstance();
        asynHttpUtil.goodinfo(DetailsCartActivity.this, goods_id, goods_spec);
        asyncLoadingPicture = AsyncLoadingPicture.getInstance(getApplicationContext());
        viewpager.setPageTransformer(true, new RotateDownPageTransformer());
        gridadapter = new DetailCartAdapter(getApplicationContext());
        selectDialogAdapter = new SelectDialogAdapter(getApplicationContext());
        grd_botm.setAdapter(gridadapter);
        listview.setAdapter(selectDialogAdapter);
        viewpager.addOnPageChangeListener(this);
        scrollView.setOnScrollListener(this);
        asynHttpUtil.setIoAuthCallBack(this);
        parent_layout.getViewTreeObserver().addOnGlobalLayoutListener(this);
        tabs_rg2.setOnCheckedChangeListener(this);
        selectDialogAdapter.setSelectDialogListener(this);
    }

    private void setimageAtt(ImageView imageView) {
        imageView.setPadding(DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10), DimenUtils.dip2px(getApplicationContext(), 10));
        imageView.setMinimumHeight(DimenUtils.dip2px(getApplicationContext(), 30));
        imageView.setMinimumWidth(DimenUtils.dip2px(getApplicationContext(), 30));
        imageView.setScaleType(ImageView.ScaleType.CENTER);
    }

    @Override
    public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {

    }

    @Override
    public void onPageSelected(int position) {
        for (int i = 0; i < lindot.getChildCount(); i++)
            ((ImageView) lindot.getChildAt(i)).setImageResource(R.mipmap.lunbo);
        ((ImageView) lindot.getChildAt(position)).setImageResource(R.mipmap.lunbodangqian);
    }

    @Override
    public void onPageScrollStateChanged(int state) {
        switch (state) {
            case 1:
                isScirolled = false;
                break;
            case 2:
                isScirolled = true;
                break;
            case 0:
                if (viewpager.getCurrentItem() == viewpager.getAdapter().getCount() - 1 && !isScirolled)
                    viewpager.setCurrentItem(0);
                else if (viewpager.getCurrentItem() == 0 && !isScirolled)
                    viewpager.setCurrentItem(viewpager.getAdapter().getCount() - 1);
                break;
        }
    }

    @Override
    public void getIOAuthCallBack(JSONObject response, String type) throws JSONException {
        showToast(response.getString("msg"));
        if (!response.getString("status").equals("1")) return;
        if (type.equals(HttpService.TYPE_GOODINFO)) {
            JSONObject jsonObject = response.getJSONObject("datas");
            goods_pricestr = jsonObject.getString("goods_price");
            store_name = jsonObject.getString("store_name");
            goods_image = jsonObject.getString("goods_image");
            String preferential = jsonObject.getString("preferential");
            goods_id = jsonObject.getString("goods_id");
            txt_coll.setText(jsonObject.getString("favorites").equals("0") ? R.string.collection : R.string.collectioned);
            good_name.setText(jsonObject.getString("goods_name"));
            goods_price.setText(goods_pricestr);
            oods_marketprice.setText("¥" + preferential + "元");
            goods_price2.setText(goods_pricestr);
            oods_marketprice2.setText(preferential + "元");
            try {
                JSONObject jsonObject1 = jsonObject.getJSONArray("evaluate").getJSONObject(0);
                geval_addtime.setText(jsonObject1.getString("geval_addtime"));
                evaluate.setText(jsonObject1.getString("geval_content"));
                member_name.setText(jsonObject1.getString("member_name"));
                asyncLoadingPicture.LoadPicture(jsonObject1.getString("member_avatar"), member_avatar);
                /**评论图片列表*/
                JSONArray jsonArray1 = jsonObject1.getJSONArray("img_list");
                JSONArray jsonArray = new JSONArray();
                for (int i = 0; i < jsonArray1.length(); i++) {
                    JSONObject jsonObject2 = new JSONObject();
                    jsonObject2.put("img", jsonArray1.optString(i));
                    jsonArray.put(jsonObject2);
                }
                gridadapter.setData(jsonArray);
            } catch (Exception e) {
                lin_msg.setVisibility(View.GONE);
            }
            try {
                jsonArray = jsonObject.getJSONArray("spec_name");
                selectDialogAdapter.setData(jsonArray);
            } catch (JSONException e) {

            }

            listfragment = new ArrayList<>();
            //产品详情
            productIntrFragment = new ProductIntrFragment();
            productIntrFragment.setInfo(jsonObject.getString("goods_body"));
            //产品介绍
            specificParFragment = new SpecificParFragment();
            specificParFragment.setParameter(jsonObject.getString("parameter"));
            //包装售后
            packSaleFragment = new PackSaleFragment();
            packSaleFragment.setAftersale(jsonObject.getString("aftersale"));
            listfragment.add(productIntrFragment);
            listfragment.add(specificParFragment);
            listfragment.add(packSaleFragment);
            tabAdapter = new FragmentTabAdapter(this, listfragment, R.id.tab_content, tabs_rg);
            /**图片列表*/
            JSONArray imgjson = jsonObject.getJSONArray("img_list");
            List<ImageView> mImageViews = new ArrayList<ImageView>();
            lindot.removeAllViews();
            List<String> list = new ArrayList<String>();
            for (int i = 0; i < imgjson.length(); i++) list.add(imgjson.optString(i));
            for (String imgId : list) {
                ImageView imageView = new ImageView(getApplicationContext());
                imageView.setScaleType(ImageView.ScaleType.CENTER_CROP);
                asyncLoadingPicture.LoadPicture(imgId, imageView);
                mImageViews.add(imageView);
                ImageView imageView1 = new ImageView(getApplicationContext());
                setimageAtt(imageView1);
                imageView1.setImageResource(R.mipmap.lunbo);
                lindot.addView(imageView1);
            }
            asyncLoadingPicture.LoadPicture(goods_image, img_title);
            ((ImageView) lindot.getChildAt(0)).setImageResource(R.mipmap.lunbodangqian);
            adapter = new ImageViewPagerAdapter(mImageViews);
            viewpager.setAdapter(adapter);
        } else if (type.equals(HttpService.TYPE_FAVORITES)) {
            txt_coll.setText(R.string.collectioned);
        } else if (type.equals(HttpService.TYPE_ADDCART)) {
            SharepreUtil.putStringValue(getApplicationContext(), Constants.CARTNUM, response.getJSONObject("datas").getString("cart_num"));
        } else if (type.equals(HttpService.TYPE_PERSONAL_COUNTMONEY)) {
            Bundle bundle = new Bundle();
            Intent intent = new Intent();
            bundle.putString("yunfei", response.getJSONObject("datas").getString("shipping_fee"));
            bundle.putString("money", response.getJSONObject("datas").getString("order_amount"));
            List<String> l_createorder = new ArrayList<String>();//所有选中店铺中的每一项
            List<List<String>> order_content = new ArrayList<List<String>>();//跳转页面需要的参数
            l_createorder.add(goods_id);
            l_createorder.add(goods_pricestr);
            l_createorder.add(num + "");
            l_createorder.add(good_name.getText().toString());
            l_createorder.add(goods_image);
            l_createorder.add(store_name);
            order_content.add(l_createorder);
            bundle.putSerializable("all", (Serializable) order_content);

            intent.putExtras(bundle);
            intent.setClass(getApplicationContext(), ShopcarSendOrder.class);
            startActivity(intent);

        }

    }

    @Override
    public void onScroll(int scrollY) {
        int layoumilb = Math.max(scrollY, gad_milb.getTop());
        gad_botm.layout(0, layoumilb, gad_botm.getWidth(), layoumilb + gad_botm.getHeight());
    }

    @Override
    public void onCheckedChanged(RadioGroup group, int checkedId) {
        switch (group.getId()) {
            case R.id.tabs_rg2:
                for (int i = 0; i < tabs_rg2.getChildCount(); i++) {
                    if (tabs_rg2.getChildAt(i).getId() == checkedId) tabAdapter.showTab(i);
                    break;
                }
        }
    }

    @Override
    public void onGlobalLayout() {
        onScroll(scrollView.getScrollY());
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        // TODO Auto-generated method stub
        if (keyCode == KeyEvent.KEYCODE_BACK) {
            if (bottom.getVisibility() == View.VISIBLE) {
                hideListAnimation();
            } else {
                finish();
            }
            return true;
        }
        return super.onKeyDown(keyCode, event);
    }

    @Override
    public void click(int position, int pos) {
        try {
            List<String> good_speclist = new ArrayList<String>();
            StringBuffer stringBuffer = new StringBuffer();
            String id = jsonArray.getJSONObject(position).getJSONArray("list").getJSONObject(pos).getString("childid");
            String goodsid = jsonArray.getJSONObject(position).getJSONArray("list").getJSONObject(pos).getString("id");
            good_speclist.add(id);
            for (int i = 0; i < jsonArray.length() && i != pos; i++) {
                JSONArray jsonArray1 = jsonArray.getJSONObject(i).getJSONArray("list");
                for (int j = 0; j < jsonArray1.length(); j++) {
                    if (jsonArray1.getJSONObject(j).getString("default").equals("1")) {
                        good_speclist.add(jsonArray1.getJSONObject(j).getString("id"));
                    }
                }
            }
            for (int i = 0; i < good_speclist.size(); i++)
                stringBuffer.append((i != good_speclist.size() - 1) ? good_speclist.get(i) + "," : good_speclist.get(i));
            asynHttpUtil.goodinfo(DetailsCartActivity.this, goodsid, stringBuffer.toString());
            asynHttpUtil.setIoAuthCallBack(this);
        } catch (JSONException e) {

        }


    }
}
